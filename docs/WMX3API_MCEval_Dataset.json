[
    {
        "TaskId": 1,
        "Instruction": "Start an absolute position command of Axis 0 to position 180 with 1000 velocity.",
        "CanonicalCode": "#WMX3 python library\nfrom WMX3ApiPython import *\nfrom time import *\n\nINFINITE = int(0xFFFFFFFF)\n\ndef main():\n    Wmx3Lib = WMX3Api()\n    CmStatus = CoreMotionStatus()\n    Wmx3Lib_cm = CoreMotion(Wmx3Lib)\n    print('Program begin.')\n    sleep(1)\n\n    # Create devices. \n    ret = Wmx3Lib.CreateDevice('C:\\\\Program Files\\\\SoftServo\\\\WMX3', DeviceType.DeviceTypeNormal, INFINITE)\n    if ret!=0:\n        print('CreateDevice error code is ' + str(ret) + ': ' + Wmx3Lib.ErrorToString(ret))\n        return\n\n    # Set Device Name.\n    Wmx3Lib.SetDeviceName('WMX3initTest')\n\n    # Start Communication.\n    ret = Wmx3Lib.StartCommunication(INFINITE)\n    if ret!=0:\n        print('StartCommunication error code is ' + str(ret) + ': ' + Wmx3Lib.ErrorToString(ret))\n        return\n\n    #Clear every servo/motor/amplifier's alarm\n    timeoutCounter=0\n    while True:\n        # GetStatus -> First return value : Error code, Second return value: CoreMotionStatus\n        ret, CmStatus = Wmx3Lib_cm.GetStatus()\n        if (not CmStatus.GetAxesStatus(0).ampAlarm):\n            break\n        ret = Wmx3Lib_cm.axisControl.ClearAmpAlarm(0)\n        sleep(0.5)\n        timeoutCounter=timeoutCounter+1\n        if(timeoutCounter > 5):\n            break\n    if(timeoutCounter > 5):\n        print('Clear axis alarm fails!')\n        return\n\n    # Set servo on for Axis 0. \n    ret = Wmx3Lib_cm.axisControl.SetServoOn(0, 1)\n    timeoutCounter = 0\n    while True:\n        # GetStatus -> First return value : Error code, Second return value: CoreMotionStatus\n        ret, CmStatus = Wmx3Lib_cm.GetStatus()\n        if (CmStatus.GetAxesStatus(0).servoOn):\n            break\n        sleep(0.4)\n        timeoutCounter += 1\n        if (timeoutCounter > 5):\n            break\n    if (timeoutCounter > 5):\n        print('Set servo on for axis 0 fails!')\n        return\n\n    #Sleep is a must between SetServoOn and Homing\n    sleep(0.1) \n    # Homing\n    homeParam = Config_HomeParam()\n    ret, homeParam = Wmx3Lib_cm.config.GetHomeParam(0)\n    homeParam.homeType = Config_HomeType.CurrentPos\n\n    # SetHomeParam -> First return value: Error code, Second return value: param error\n    ret, homeParamError = Wmx3Lib_cm.config.SetHomeParam(0, homeParam)\n\n    ret = Wmx3Lib_cm.home.StartHome(0)\n    if ret!=0:\n        print('StartHome error code is ' + str(ret) + ': ' + Wmx3Lib_cm.ErrorToString(ret))\n        return\n    Wmx3Lib_cm.motion.Wait(0)\n\n    # Create a command value of target as 180.\n    posCommand = Motion_PosCommand()\n    posCommand.profile.type = ProfileType.Trapezoidal\n    posCommand.axis = 0\n    posCommand.target = 180\n    posCommand.profile.velocity = 1000\n    posCommand.profile.acc = 10000\n    posCommand.profile.dec = 10000\n\n    # Execute command to move from current position to specified absolute position.\n    ret = Wmx3Lib_cm.motion.StartPos(posCommand)\n    if ret!=0:\n        print('StartPos error code is ' + str(ret) + ': ' + Wmx3Lib_cm.ErrorToString(ret))\n        return\n\n    # Wait until the axis moves to the target position and stops.\n    Wmx3Lib_cm.motion.Wait(0)\n\n    # Set servo off.\n    ret = Wmx3Lib_cm.axisControl.SetServoOn(0, 0)\n    if ret!=0:\n        print('SetServoOn to off error code is ' + str(ret) + ': ' + Wmx3Lib_cm.ErrorToString(ret))\n        return\n\n    # Stop Communication.\n    ret = Wmx3Lib.StopCommunication(INFINITE)\n    if ret!=0:\n        print('StopCommunication error code is ' + str(ret) + ': ' + Wmx3Lib.ErrorToString(ret))\n        return\n\n    # Close Device.\n    ret = Wmx3Lib.CloseDevice()\n    if ret!=0:\n        print('CloseDevice error code is ' + str(ret) + ': ' + Wmx3Lib.ErrorToString(ret))\n        return\n\n    print('Program End.')\n\nif __name__ == '__main__':\n    main()",
        "EndPoint": "[[0],\n[180]]",
        "MotionLogData": NaN
    }
]